"""
Exploit for lab:
    Insufficient workflow validation
    https://portswigger.net/web-security/logic-flaws/examples/lab-logic-flaws-insufficient-workflow-validation

By Xqweak.

---
Description:
    This lab makes flawed assumptions about the sequence of events in the
    purchasing workflow. To solve the lab, exploit this flaw to buy a
    "Lightweight l33t leather jacket".
"""
import requests
import argparse
from bs4 import BeautifulSoup
import warnings
warnings.filterwarnings("ignore")



class LogicExploit:
    def __init__(self, url):
        self.url = url

    def login(self):
        s = requests.Session()
        s.verify = False
        login_url = f'{self.url}/login'
        print(f'loggin in {login_url}')
        c = s.get(login_url).content
        csrf_token = BeautifulSoup(c, 'lxml').find('input', {"name":"csrf"})['value']
        login_data = {
                "username":'wiener',
                "password":"peter",
                "csrf":csrf_token
                }
        s.post(login_url, login_data)
        print('logued!')
        return s , s.cookies['session']

    def purchase_l33t_jacket(self):
        """Understood the exploit, got toasted"""
        pass




            


lol = LogicExploit("https://0af40007036a58b4825a3ee8007100a7.web-security-academy.net")
lol.purchase_l33t_jacket()
